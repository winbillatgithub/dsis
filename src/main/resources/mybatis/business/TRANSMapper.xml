<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="TRANSMapper">

	<!--表名 -->
	<sql id="tableName">
		B_TRANS
	</sql>

	<!-- 字段 -->
	<sql id="Field">
		TYPE,
		CORP_ID,
		DATA_DATE,
		COMMIT_TIME,
		COMMIT_FLAG,
		COMMIT_USER,
		AUDIT_USER_LEVEL1,
		AUDIT_TIME_LEVEL1,
		AUDIT_USER_LEVEL2,
		AUDIT_TIME_LEVEL2,
		AUDIT_USER_LEVEL3,
		AUDIT_TIME_LEVEL3,
		AUDIT_LEVEL,
		REJECT_REASON,
		REMARK,
		R_TYPE,
		RSV_STR2,
		RSV_STR3,
		RSV_STR1,
		CREATE_DATE,
		MODIFY_DATE,
		OPERATOR,
		TRANS_ID
	</sql>

	<!-- 字段值 -->
	<sql id="FieldValue">
		#{TYPE},
		#{CORP_ID},
		#{DATA_DATE},
		#{COMMIT_TIME},
		#{COMMIT_FLAG},
		#{COMMIT_USER},
		#{AUDIT_USER_LEVEL1},
		#{AUDIT_TIME_LEVEL1},
		#{AUDIT_USER_LEVEL2},
		#{AUDIT_TIME_LEVEL2},
		#{AUDIT_USER_LEVEL3},
		#{AUDIT_TIME_LEVEL3},
		#{AUDIT_LEVEL},
		#{REJECT_REASON},
		#{REMARK},
		#{R_TYPE},
		#{RSV_STR2},
		#{RSV_STR3},
		#{RSV_STR1},
		#{CREATE_DATE},
		#{MODIFY_DATE},
		#{OPERATOR},
		#{TRANS_ID}
	</sql>

	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>

	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			TRANS_ID = #{TRANS_ID}
	</delete>

	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			TYPE = #{TYPE},
			CORP_ID = #{CORP_ID},
			DATA_DATE = #{DATA_DATE},
			COMMIT_TIME = #{COMMIT_TIME},
			COMMIT_FLAG = #{COMMIT_FLAG},
			COMMIT_USER = #{COMMIT_USER},
			AUDIT_USER_LEVEL1 = #{AUDIT_USER_LEVEL1},
			AUDIT_LEVEL = #{AUDIT_LEVEL},
			MODIFY_DATE = #{MODIFY_DATE},
			OPERATOR = #{OPERATOR},
		TRANS_ID = TRANS_ID
		where 
		TRANS_ID = #{TRANS_ID}
	</update>
	<!-- 修改状态 -->
	<update id="editFlag" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			COMMIT_TIME = #{COMMIT_TIME},
			COMMIT_FLAG = #{COMMIT_FLAG},
			COMMIT_USER = #{COMMIT_USER}
		where 
		TRANS_ID = #{TRANS_ID}
	</update>
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			TRANS_ID = #{TRANS_ID}
	</select>

	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
			a.TYPE,
			a.CORP_ID,
			a.DATA_DATE,
			a.COMMIT_TIME,
			a.COMMIT_FLAG,
			a.COMMIT_USER,
			a.AUDIT_USER_LEVEL1,
			a.AUDIT_TIME_LEVEL1,
			a.AUDIT_USER_LEVEL2,
			a.AUDIT_TIME_LEVEL2,
			a.AUDIT_USER_LEVEL3,
			a.AUDIT_TIME_LEVEL3,
			a.AUDIT_LEVEL,
			a.REJECT_REASON,
			a.TRANS_ID
		from 
		<include refid="tableName"></include> a
		left join b_node b on a.TRANS_ID = B.TRANS_ID
		left join sys_user c on a.COMMIT_USER = c.USER_ID
		where 1=1
		<if test="pd.CORP_ID != null and pd.CORP_ID != ''">
			and a.CORP_ID IN (
				SELECT m.CORP_ID FROM SYS_CORP m WHERE m.CORP_ID = #{pd.CORP_ID}
				UNION ALL
				SELECT CORP_ID FROM SYS_CORP WHERE PARENT_ID = #{pd.CORP_ID}
				UNION ALL
				SELECT CORP_ID FROM SYS_CORP WHERE PARENT_ID IN (
				SELECT CORP_ID FROM SYS_CORP WHERE PARENT_ID = #{pd.CORP_ID}
				)
				UNION ALL
				SELECT CORP_ID FROM SYS_CORP WHERE PARENT_ID IN (
				SELECT CORP_ID FROM SYS_CORP WHERE PARENT_ID IN (
				SELECT CORP_ID FROM SYS_CORP WHERE PARENT_ID = #{pd.CORP_ID}
				))
			)
		</if>
		<if test="pd.TABLES_ID != null and pd.TABLES_ID != ''">
		    and a.TYPE = #{pd.TABLES_ID}
		</if>
		<if test="pd.startDate != null and pd.startDate != ''">
		    and a.DATA_DATE >= #{pd.startDate}
		</if>
		<if test="pd.dueDate != null and pd.dueDate != ''">
		    and a.DATA_DATE &lt;= #{pd.dueDate}
		</if>
		<if test="pd.ROLE_ID != null and pd.ROLE_ID != ''">
		    and (b.AUDIT_USER = #{pd.ROLE_ID} or a.COMMIT_USER = #{pd.USER_ID})
		</if>
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				<!--	根据需求自己加检索条件 -->
					c.NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				)
		</if>
		group by
			a.TYPE,
			a.CORP_ID,
			a.DATA_DATE,
			a.COMMIT_TIME,
			a.COMMIT_FLAG,
			a.COMMIT_USER,
			a.AUDIT_USER_LEVEL1,
			a.AUDIT_TIME_LEVEL1,
			a.AUDIT_USER_LEVEL2,
			a.AUDIT_TIME_LEVEL2,
			a.AUDIT_USER_LEVEL3,
			a.AUDIT_TIME_LEVEL3,
			a.AUDIT_LEVEL,
			a.REJECT_REASON,
			a.TRANS_ID
	</select>
	
	
	<select id="excel" parameterType="page"  resultType="pd">
		select
			a.TYPE,
			a.CORP_ID,
			a.DATA_DATE,
			a.COMMIT_TIME,
			a.COMMIT_FLAG,
			a.COMMIT_USER,
			a.AUDIT_USER_LEVEL1,
			a.AUDIT_TIME_LEVEL1,
			a.AUDIT_USER_LEVEL2,
			a.AUDIT_TIME_LEVEL2,
			a.AUDIT_USER_LEVEL3,
			a.AUDIT_TIME_LEVEL3,
			a.AUDIT_LEVEL,
			a.REJECT_REASON,
			a.TRANS_ID
		from 
		<include refid="tableName"></include> a
		left join b_node b on a.TRANS_ID = B.TRANS_ID
		left join sys_user c on a.COMMIT_USER = c.USER_ID
		where 1=1
		<if test="pd.CORP_ID != null and pd.CORP_ID != ''">
			and a.CORP_ID IN (
				SELECT m.CORP_ID FROM SYS_CORP m WHERE m.CORP_ID = #{pd.CORP_ID}
				UNION ALL
				SELECT CORP_ID FROM SYS_CORP WHERE PARENT_ID = #{pd.CORP_ID}
				UNION ALL
				SELECT CORP_ID FROM SYS_CORP WHERE PARENT_ID IN (
				SELECT CORP_ID FROM SYS_CORP WHERE PARENT_ID = #{pd.CORP_ID}
				)
				UNION ALL
				SELECT CORP_ID FROM SYS_CORP WHERE PARENT_ID IN (
				SELECT CORP_ID FROM SYS_CORP WHERE PARENT_ID IN (
				SELECT CORP_ID FROM SYS_CORP WHERE PARENT_ID = #{pd.CORP_ID}
				))
			)
		</if>
		<if test="pd.TABLES_ID != null and pd.TABLES_ID != ''">
		    and a.TYPE = #{pd.TABLES_ID}
		</if>
		<if test="pd.startDate != null and pd.startDate != ''">
		    and a.DATA_DATE >= #{pd.startDate}
		</if>
		<if test="pd.dueDate != null and pd.dueDate != ''">
		    and a.DATA_DATE &lt;= #{pd.dueDate}
		</if>
		<if test="pd.ROLE_ID != null and pd.ROLE_ID != ''">
		    and (b.AUDIT_USER = #{pd.ROLE_ID} or a.COMMIT_USER = #{pd.USER_ID})
		</if>
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				<!--	根据需求自己加检索条件 -->
					c.NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				)
		</if>
		group by
			a.TYPE,
			a.CORP_ID,
			a.DATA_DATE,
			a.COMMIT_TIME,
			a.COMMIT_FLAG,
			a.COMMIT_USER,
			a.AUDIT_USER_LEVEL1,
			a.AUDIT_TIME_LEVEL1,
			a.AUDIT_USER_LEVEL2,
			a.AUDIT_TIME_LEVEL2,
			a.AUDIT_USER_LEVEL3,
			a.AUDIT_TIME_LEVEL3,
			a.AUDIT_LEVEL,
			a.REJECT_REASON,
			a.TRANS_ID
	</select>

	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>

	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			TRANS_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>

	<!-- 审批节点 -->
	<update id="approve" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			COMMIT_FLAG = #{COMMIT_FLAG},
		<if test="AUDIT_TIME_LEVEL1 != null and AUDIT_TIME_LEVEL1 != ''">
			AUDIT_TIME_LEVEL1 = #{AUDIT_TIME_LEVEL1},
		</if>
		<if test="AUDIT_USER_LEVEL2 != null and AUDIT_USER_LEVEL2 != ''">
			AUDIT_USER_LEVEL2 = #{AUDIT_USER_LEVEL2},
		</if>
		<if test="AUDIT_TIME_LEVEL2 != null and AUDIT_TIME_LEVEL2 != ''">
			AUDIT_TIME_LEVEL2 = #{AUDIT_TIME_LEVEL2},
		</if>
		<if test="AUDIT_USER_LEVEL3 != null and AUDIT_USER_LEVEL3 != ''">
			AUDIT_USER_LEVEL3 = #{AUDIT_USER_LEVEL3},
		</if>
		<if test="AUDIT_TIME_LEVEL3 != null and AUDIT_TIME_LEVEL3 != ''">
			AUDIT_TIME_LEVEL3 = #{AUDIT_TIME_LEVEL3},
		</if>
			AUDIT_LEVEL = #{AUDIT_LEVEL}
		where 
		TRANS_ID = #{TRANS_ID}
	</update>

	<!-- 驳回 -->
	<update id="deny" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			COMMIT_FLAG = #{COMMIT_FLAG},
			AUDIT_USER_LEVEL2 = null,
			AUDIT_USER_LEVEL3 = null,
			AUDIT_TIME_LEVEL1 = null,
			AUDIT_TIME_LEVEL2 = null,
			AUDIT_TIME_LEVEL3 = null,
			AUDIT_LEVEL = #{AUDIT_LEVEL}
		where 
		TRANS_ID = #{TRANS_ID}
	</update>
	
	
	
</mapper>