<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 启用注解 -->
	<context:annotation-config />
	
	<!-- 启动组件扫描，排除@Controller组件，该组件由SpringMVC配置文件扫描 -->
	<context:component-scan base-package="com.as">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSource"></property>
 	</bean>
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
                 <value>/WEB-INF/classes/dbconfig.properties</value>
            </list>
        </property>
	</bean>
	
	<!-- 阿里 druid数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
         <!-- 数据库基本信息配置 -->
         <property name="url" value="${url}" />
         <property name="username" value="${username}" />
         <property name="password" value="${password}" />
         <property name="driverClassName" value="${driverClassName}" />
         <property name="filters" value="${filters}" />
   		 <!-- 最大并发连接数 -->
         <property name="maxActive" value="${maxActive}" />
         <!-- 初始化连接数量 -->
         <property name="initialSize" value="${initialSize}" />
         <!-- 配置获取连接等待超时的时间 -->
         <property name="maxWait" value="${maxWait}" />
         <!-- 最小空闲连接数 -->
         <property name="minIdle" value="${minIdle}" />
   		 <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
         <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
         <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
         <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />
         <property name="validationQuery" value="${validationQuery}" />
         <property name="testWhileIdle" value="${testWhileIdle}" />
         <property name="testOnBorrow" value="${testOnBorrow}" />
         <property name="testOnReturn" value="${testOnReturn}" />
         <property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}" />
         <!-- 打开removeAbandoned功能 -->
         <property name="removeAbandoned" value="${removeAbandoned}" />
         <!-- 1800秒，也就是30分钟 -->
         <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />
         <!-- 关闭abanded连接时输出错误日志 -->
         <property name="logAbandoned" value="${logAbandoned}" />
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception"/>
			<tx:method name="insert*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception" />
			<tx:method name="save*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>
	
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	<!-- 事物处理 -->
	<aop:config>
		<aop:pointcut id="pc" expression="execution(* com.as.service..*(..))" />
		<aop:advisor pointcut-ref="pc" advice-ref="txAdvice" />
	</aop:config>
	
	<!-- 配置mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
        <!-- mapper扫描 -->
        <property name="mapperLocations" value="classpath:mybatis/*/*.xml"></property>
    </bean>
    
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	
	<!-- ================ Shiro start ================ -->
		<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
			<property name="realm" ref="ShiroRealm" />
			<property name="sessionManager" ref="sessionManager" />
		</bean>

		<!-- 項目自定义的Realm -->
	    <bean id="ShiroRealm" class="com.as.interceptor.shiro.ShiroRealm" ></bean>
		
		<!-- Shiro Filter -->
        <!-- Fixed bug:重定向出现jsessionid=xxx路径的问题 -->
        <!--<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">-->
        <bean id="shiroFilter" class="com.as.interceptor.shiro.MyShiroFilterFactoryBean">
			<property name="securityManager" ref="securityManager" />

			<property name="loginUrl" value="/" />
			
			<property name="successUrl" value="/main/index" />
			
			<property name="unauthorizedUrl" value="/login_toLogin" />
			<property name="filters">
				<map>
					<!--退出过滤器-->
					<entry key="logout" value-ref="systemLogoutFilter" />
				</map>
			</property>
			<property name="filterChainDefinitions">
				<value>
				/logout = logout
				<!--/static/login/** 			= anon-->
				<!--/static/js/myjs/** 			= authc-->
				<!--/static/js/** 				= anon-->
                <!--/static/** 				    = anon-->
                <!--/plugins/**                 = anon-->
				<!--/files/uploadFiles 	        = authc-->
	           	<!--/code.do 					= anon-->
                <!--/bianma.do 					= anon-->
                <!--/register.do				= anon-->
	           	<!--/login_login	 			= anon-->
				<!--/pub/*	 			        = anon-->
	           	<!--/app**/** 					= anon-->
	           	<!--/weixin/** 					= anon-->
	           	<!--/**							= authc-->
				</value>
			</property>
		</bean>
		<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">

	        <property name="globalSessionTimeout" value="3600000" />
	        <property name="deleteInvalidSessions" value="true" />
	        <property name="sessionValidationSchedulerEnabled" value="false" />
	        <property name="sessionValidationInterval" value="10000"/>
	        <!-- <property name="cacheManager" ref="shiroCacheManager" /> -->
            <property name="sessionDAO" ref="sessionDAO" />
	        <property name="sessionIdCookieEnabled" value="true" />
	        <property name="sessionIdCookie" ref="sessionIdCookie" />
	        <!-- <property name="sessionListeners">
	            <list>
	                <ref bean="sessionListener" />
	            </list>
	        </property> -->
	    </bean>
		<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
            <!--<constructor-arg name="name" value="dsis.session.id"/>-->
	        <property name="name" value="dsis.session.id" />
	        <property name="path" value="/" />
	    </bean>
    <!-- 会话DAO -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>
    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- ================ Shiro end ================ -->
	
   
</beans>
